import zipfile
from typing import Any, List, Optional, Tuple

from django.core.management.base import BaseCommand, CommandParser

has_bz2: bool
READ_STDIN: str

class Command(BaseCommand):
    stderr: django.core.management.base.OutputWrapper
    stdout: django.core.management.base.OutputWrapper
    style: django.core.management.color.Style
    help: str = ...
    missing_args_message: str = ...
    def add_arguments(self, parser: CommandParser) -> None: ...
    ignore: Any = ...
    using: Any = ...
    app_label: Any = ...
    verbosity: Any = ...
    format: Any = ...
    def handle(self, *fixture_labels: Any, **options: Any) -> None: ...
    fixture_count: int = ...
    loaded_object_count: int = ...
    fixture_object_count: int = ...
    models: Any = ...
    serialization_formats: Any = ...
    compression_formats: Any = ...
    def loaddata(self, fixture_labels: Tuple[str]) -> None: ...
    def load_label(self, fixture_label: str) -> None: ...
    def find_fixtures(
        self, fixture_label: str
    ) -> List[Tuple[str, Optional[str], str]]: ...
    def fixture_dirs(self) -> List[str]: ...
    def parse_name(
        self, fixture_name: str
    ) -> Tuple[str, Optional[str], Optional[str]]: ...

class SingleZipReader(zipfile.ZipFile):
    NameToInfo: Dict[str, zipfile.ZipInfo]
    compression: int
    debug: int
    filelist: List[zipfile.ZipInfo]
    filename: str
    fp: _io.BufferedReader
    mode: str
    pwd: None
    start_dir: int
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    def read(self) -> bytes: ...

def humanize(dirname: str) -> str: ...
