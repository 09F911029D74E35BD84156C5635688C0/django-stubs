# Stubs for django.test.html (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from html.parser import HTMLParser
from typing import Any, Optional

from typing import List, Optional, Tuple, Union
WHITESPACE: Any

def normalize_whitespace(string: str) -> str: ...

class Element:
    name: Any = ...
    attributes: Any = ...
    children: Any = ...
    def __init__(self, name: Optional[str], attributes: Union[Tuple, List[Union[Tuple[str, str], Tuple[str, None]]], List[Tuple[str, None]], List[Tuple[str, str]]]) -> None: ...
    def append(self, element: Union[str, Element]) -> None: ...
    def finalize(self) -> None: ...
    def __eq__(self, element: Union[str, Element]) -> bool: ...
    def __hash__(self) -> int: ...
    def _count(self, element: Union[str, Element], count: bool = ...) -> int: ...
    def __contains__(self, element: Element) -> bool: ...
    def count(self, element: Element) -> int: ...
    def __getitem__(self, key: int) -> Union[str, Element]: ...
    def __str__(self) -> str: ...
    def __repr__(self) -> str: ...

class RootElement(Element):
    def __init__(self) -> None: ...
    def __str__(self) -> str: ...

class HTMLParseError(Exception): ...

class Parser(HTMLParser):
    SELF_CLOSING_TAGS: Any = ...
    root: Any = ...
    open_tags: Any = ...
    element_positions: Any = ...
    def __init__(self) -> None: ...
    def error(self, msg: Any) -> None: ...
    def format_position(self, position: Optional[Any] = ..., element: Optional[Any] = ...): ...
    @property
    def current(self) -> Element: ...
    def handle_startendtag(self, tag: str, attrs: List[Tuple[str, str]]) -> None: ...
    def handle_starttag(self, tag: str, attrs: Union[List[Union[Tuple[str, str], Tuple[str, None]]], List[Tuple[str, str]]]) -> None: ...
    def handle_endtag(self, tag: str) -> None: ...
    def handle_data(self, data: str) -> None: ...
    def handle_charref(self, name: str) -> None: ...
    def handle_entityref(self, name: str) -> None: ...

def parse_html(html: str) -> Element: ...
