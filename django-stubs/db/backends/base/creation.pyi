# Stubs for django.db.backends.base.creation (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional

from django.db.backends.sqlite3.base import DatabaseWrapper
from typing import Dict, Optional, Tuple, Union

TEST_DATABASE_PREFIX: str

class BaseDatabaseCreation:
    connection: Any = ...
    def __init__(self, connection: DatabaseWrapper) -> None: ...
    @property
    def _nodb_connection(self): ...
    def create_test_db(
        self,
        verbosity: int = ...,
        autoclobber: bool = ...,
        serialize: bool = ...,
        keepdb: bool = ...,
    ) -> str: ...
    def set_as_test_mirror(
        self, primary_settings_dict: Dict[str, Optional[Union[str, int, Dict[str, None]]]]
    ) -> None: ...
    def serialize_db_to_string(self) -> str: ...
    def deserialize_db_from_string(self, data: str) -> None: ...
    def _get_database_display_str(self, verbosity: int, database_name: str) -> str: ...
    def _get_test_db_name(self) -> str: ...
    def _execute_create_test_db(
        self, cursor: Any, parameters: Any, keepdb: bool = ...
    ) -> None: ...
    def _create_test_db(self, verbosity: Any, autoclobber: Any, keepdb: bool = ...): ...
    def clone_test_db(
        self, suffix: Any, verbosity: int = ..., autoclobber: bool = ..., keepdb: bool = ...
    ) -> None: ...
    def get_test_db_clone_settings(self, suffix: Any): ...
    def _clone_test_db(self, suffix: Any, verbosity: Any, keepdb: bool = ...) -> None: ...
    def destroy_test_db(
        self,
        old_database_name: str = ...,
        verbosity: int = ...,
        keepdb: bool = ...,
        suffix: None = ...,
    ) -> None: ...
    def _destroy_test_db(self, test_database_name: Any, verbosity: Any) -> None: ...
    def sql_table_creation_suffix(self): ...
    def test_db_signature(self) -> Tuple[str, str, str, str]: ...
