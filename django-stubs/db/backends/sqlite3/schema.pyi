# Stubs for django.db.backends.sqlite3.schema (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from django.db.backends.base.schema import BaseDatabaseSchemaEditor
from typing import Any, Optional

from django.db.models.base import Model
from django.db.models.fields import AutoField, Field, IntegerField, SlugField, TimeField
from typing import Any, Dict, Optional, Type, Union
class DatabaseSchemaEditor(BaseDatabaseSchemaEditor):
    sql_delete_table: str = ...
    sql_create_fk: Any = ...
    sql_create_inline_fk: str = ...
    sql_create_unique: str = ...
    sql_delete_unique: str = ...
    def __enter__(self) -> DatabaseSchemaEditor: ...
    def __exit__(self, exc_type: None, exc_value: None, traceback: None) -> None: ...
    def quote_value(self, value: Optional[Union[int, memoryview, str]]) -> str: ...
    def _is_referenced_by_fk_constraint(self, table_name: str, column_name: Optional[str] = ..., ignore_self: bool = ...) -> bool: ...
    def alter_db_table(self, model: Type[Model], old_db_table: str, new_db_table: str, disable_constraints: bool = ...) -> None: ...
    def alter_field(self, model: Type[Model], old_field: Field, new_field: Field, strict: bool = ...) -> None: ...
    deferred_sql: Any = ...
    def _remake_table(self, model: Type[Model], create_field: Optional[Union[IntegerField, TimeField]] = ..., delete_field: Optional[Union[AutoField, SlugField]] = ..., alter_field: Any = ...) -> None: ...
    def delete_model(self, model: Type[Model], handle_autom2m: bool = ...) -> None: ...
    def add_field(self, model: Type[Model], field: Field) -> None: ...
    def remove_field(self, model: Type[Model], field: Field) -> None: ...
    def _alter_field(self, model: Type[Model], old_field: Field, new_field: Field, old_type: str, new_type: str, old_db_params: Dict[str, Optional[str]], new_db_params: Dict[str, Optional[str]], strict: bool = ...) -> None: ...
    def _alter_many_to_many(self, model: Any, old_field: Any, new_field: Any, strict: Any): ...
