# Stubs for django.db.backends.ddl_references (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any

from typing import Callable, List, Tuple, Union

class Reference:
    def references_table(self, table: Any): ...
    def references_column(self, table: Any, column: Any): ...
    def rename_table_references(self, old_table: Any, new_table: Any) -> None: ...
    def rename_column_references(
        self, table: Any, old_column: Any, new_column: Any
    ) -> None: ...
    def __repr__(self): ...
    def __str__(self) -> None: ...

class Table(Reference):
    table: Any = ...
    quote_name: Any = ...
    def __init__(self, table: str, quote_name: Callable) -> None: ...
    def references_table(self, table: str) -> bool: ...
    def rename_table_references(self, old_table: str, new_table: str) -> None: ...
    def __str__(self) -> str: ...

class TableColumns(Table):
    table: Any = ...
    columns: Any = ...
    def __init__(self, table: str, columns: List[str]) -> None: ...
    def references_column(self, table: str, column: str) -> bool: ...
    def rename_column_references(
        self, table: str, old_column: str, new_column: str
    ) -> None: ...

class Columns(TableColumns):
    quote_name: Any = ...
    col_suffixes: Any = ...
    def __init__(
        self,
        table: str,
        columns: List[str],
        quote_name: Callable,
        col_suffixes: Union[List[str], Tuple] = ...,
    ) -> None: ...
    def __str__(self) -> str: ...

class IndexName(TableColumns):
    suffix: Any = ...
    create_index_name: Any = ...
    def __init__(
        self, table: str, columns: List[str], suffix: str, create_index_name: Callable
    ) -> None: ...
    def __str__(self) -> str: ...

class ForeignKeyName(TableColumns):
    to_reference: Any = ...
    suffix_template: Any = ...
    create_fk_name: Any = ...
    def __init__(
        self,
        from_table: str,
        from_columns: List[str],
        to_table: str,
        to_columns: List[str],
        suffix_template: str,
        create_fk_name: Callable,
    ) -> None: ...
    def references_table(self, table: str) -> bool: ...
    def references_column(self, table: str, column: str) -> bool: ...
    def rename_table_references(self, old_table: Any, new_table: Any) -> None: ...
    def rename_column_references(
        self, table: str, old_column: str, new_column: str
    ) -> None: ...
    def __str__(self) -> str: ...

class Statement(Reference):
    template: Any = ...
    parts: Any = ...
    def __init__(self, template: str, **parts: Any) -> None: ...
    def references_table(self, table: str) -> bool: ...
    def references_column(self, table: str, column: str) -> bool: ...
    def rename_table_references(self, old_table: str, new_table: str) -> None: ...
    def rename_column_references(
        self, table: Any, old_column: Any, new_column: Any
    ) -> None: ...
    def __str__(self) -> str: ...
