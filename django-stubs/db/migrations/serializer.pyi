# Stubs for django.db.migrations.serializer (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any

from typing import Any, Dict, List, Set, Tuple, Union

class BaseSerializer:
    value: Any = ...
    def __init__(self, value: Any) -> None: ...
    def serialize(self) -> None: ...

class BaseSequenceSerializer(BaseSerializer):
    def _format(self) -> None: ...
    def serialize(self) -> Union[Tuple[str, Set[str]], Tuple[str, Set[Any]]]: ...

class BaseSimpleSerializer(BaseSerializer):
    def serialize(self) -> Tuple[str, Set[Any]]: ...

class DatetimeSerializer(BaseSerializer):
    value: Any = ...
    def serialize(self) -> Tuple[str, Set[str]]: ...

class DateSerializer(BaseSerializer):
    def serialize(self) -> Tuple[str, Set[str]]: ...

class DecimalSerializer(BaseSerializer):
    def serialize(self): ...

class DeconstructableSerializer(BaseSerializer):
    @staticmethod
    def serialize_deconstructed(
        path: str, args: Union[List[str], Tuple], kwargs: Dict[str, object]
    ) -> Tuple[str, Set[str]]: ...
    @staticmethod
    def _serialize_path(path: str) -> Tuple[str, Set[str]]: ...
    def serialize(self) -> Tuple[str, Set[str]]: ...

class DictionarySerializer(BaseSerializer):
    def serialize(self) -> Tuple[str, Set[Any]]: ...

class EnumSerializer(BaseSerializer):
    def serialize(self) -> Tuple[str, Set[str]]: ...

class FloatSerializer(BaseSimpleSerializer):
    def serialize(self) -> Tuple[str, Set[Any]]: ...

class FrozensetSerializer(BaseSequenceSerializer):
    def _format(self) -> str: ...

class FunctionTypeSerializer(BaseSerializer):
    def serialize(self) -> Tuple[str, Set[str]]: ...

class FunctoolsPartialSerializer(BaseSerializer):
    def serialize(self): ...

class IterableSerializer(BaseSerializer):
    def serialize(self): ...

class ModelFieldSerializer(DeconstructableSerializer):
    def serialize(self) -> Tuple[str, Set[str]]: ...

class ModelManagerSerializer(DeconstructableSerializer):
    def serialize(self) -> Tuple[str, Set[str]]: ...

class OperationSerializer(BaseSerializer):
    def serialize(self) -> Tuple[str, Set[str]]: ...

class RegexSerializer(BaseSerializer):
    def serialize(self) -> Tuple[str, Set[str]]: ...

class SequenceSerializer(BaseSequenceSerializer):
    def _format(self) -> str: ...

class SetSerializer(BaseSequenceSerializer):
    def _format(self) -> str: ...

class SettingsReferenceSerializer(BaseSerializer):
    def serialize(self): ...

class TimedeltaSerializer(BaseSerializer):
    def serialize(self) -> Tuple[str, Set[str]]: ...

class TimeSerializer(BaseSerializer):
    def serialize(self): ...

class TupleSerializer(BaseSequenceSerializer):
    def _format(self) -> str: ...

class TypeSerializer(BaseSerializer):
    def serialize(self) -> Union[Tuple[str, Set[str]], Tuple[str, Set[Any]]]: ...

class UUIDSerializer(BaseSerializer):
    def serialize(self) -> Tuple[str, Set[str]]: ...

def serializer_factory(value: Any) -> BaseSerializer: ...
