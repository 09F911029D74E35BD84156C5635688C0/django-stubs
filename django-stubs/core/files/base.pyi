# Stubs for django.core.files.base (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from django.core.files.utils import FileProxyMixin
from typing import Any, Optional

from typing import Any, Iterator, Optional, Union
class File(FileProxyMixin):
    DEFAULT_CHUNK_SIZE: Any = ...
    file: Any = ...
    name: Any = ...
    mode: Any = ...
    def __init__(self, file: Any, name: Optional[str] = ...) -> None: ...
    def __str__(self) -> str: ...
    def __repr__(self) -> str: ...
    def __bool__(self) -> bool: ...
    def __len__(self) -> int: ...
    def size(self) -> int: ...
    def chunks(self, chunk_size: None = ...) -> Iterator[Union[str, bytes]]: ...
    def multiple_chunks(self, chunk_size: Optional[Any] = ...): ...
    def __iter__(self) -> Iterator[Union[str, bytes]]: ...
    def __enter__(self) -> File: ...
    def __exit__(self, exc_type: None, exc_value: None, tb: None) -> None: ...
    def open(self, mode: Optional[Any] = ...): ...
    def close(self) -> None: ...

class ContentFile(File):
    size: Any = ...
    def __init__(self, content: Union[str, bytes], name: Optional[str] = ...) -> None: ...
    def __str__(self): ...
    def __bool__(self) -> bool: ...
    def open(self, mode: Optional[Any] = ...): ...
    def close(self) -> None: ...
    def write(self, data: Any): ...

def endswith_cr(line: bytes) -> bool: ...
def endswith_lf(line: Union[str, bytes]) -> bool: ...
def equals_lf(line: bytes) -> bool: ...
