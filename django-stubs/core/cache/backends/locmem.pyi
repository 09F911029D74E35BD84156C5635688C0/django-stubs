# Stubs for django.core.cache.backends.locmem (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from django.core.cache.backends.base import BaseCache
from typing import Any, Optional

from typing import Any, Dict, Optional, Union
_caches: Any
_expire_info: Any
_locks: Any

class LocMemCache(BaseCache):
    _cache: Any = ...
    _expire_info: Any = ...
    _lock: Any = ...
    def __init__(self, name: str, params: Dict[str, Any]) -> None: ...
    def add(self, key: str, value: Union[int, str, Dict[str, str], Dict[str, int]], timeout: object = ..., version: Optional[int] = ...): ...
    def get(self, key: Union[str, int], default: Optional[Union[str, int]] = ..., version: Optional[int] = ...) -> Any: ...
    def _set(self, key: str, value: bytes, timeout: object = ...) -> None: ...
    def set(self, key: Union[str, int], value: object, timeout: object = ..., version: Optional[int] = ...) -> None: ...
    def touch(self, key: str, timeout: object = ..., version: None = ...): ...
    def incr(self, key: Union[str, int], delta: int = ..., version: Optional[int] = ...) -> int: ...
    def has_key(self, key: str, version: Optional[int] = ...): ...
    def _has_expired(self, key: str) -> bool: ...
    def _cull(self) -> None: ...
    def _delete(self, key: str) -> None: ...
    def delete(self, key: str, version: Optional[int] = ...) -> None: ...
    def clear(self) -> None: ...
