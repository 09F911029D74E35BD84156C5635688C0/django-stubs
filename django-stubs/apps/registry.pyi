# Stubs for django.apps.registry (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from .config import AppConfig
from typing import Any, Optional

from django.apps.config import AppConfig
from django.db.migrations.state import AppConfigStub
from django.db.models.base import Model
from typing import List, Optional, Tuple, Type, Union

class Apps:
    all_models: Any = ...
    app_configs: Any = ...
    stored_app_configs: Any = ...
    apps_ready: bool = ...
    _lock: Any = ...
    loading: bool = ...
    _pending_operations: Any = ...
    def __init__(
        self, installed_apps: Union[Tuple, List[str], List[AppConfigStub]] = ...
    ) -> None: ...
    models_ready: bool = ...
    ready: bool = ...
    def populate(self, installed_apps: Optional[Any] = ...): ...
    def check_apps_ready(self) -> None: ...
    def check_models_ready(self) -> None: ...
    def get_app_configs(self): ...
    def get_app_config(self, app_label: str) -> AppConfig: ...
    def get_models(self, include_auto_created: bool = ..., include_swapped: bool = ...): ...
    def get_model(
        self, app_label: str, model_name: None = ..., require_ready: bool = ...
    ) -> Type[Model]: ...
    def register_model(self, app_label: Any, model: Any) -> None: ...
    def is_installed(self, app_name: Any): ...
    def get_containing_app_config(self, object_name: str) -> Optional[AppConfig]: ...
    def get_registered_model(self, app_label: Any, model_name: Any): ...
    def get_swappable_settings_name(self, to_string: Any): ...
    def set_available_apps(self, available: Any) -> None: ...
    def unset_available_apps(self) -> None: ...
    def set_installed_apps(self, installed: Any) -> None: ...
    def unset_installed_apps(self) -> None: ...
    def clear_cache(self) -> None: ...
    def lazy_model_operation(self, function: Any, *model_keys: Any) -> None: ...
    def do_pending_operations(self, model: Type[Model]) -> None: ...

apps: Any
