from django.db.models.base import Model
from django.db.models.options import Options
from django.db.models.query import QuerySet
from typing import Any, Dict, Tuple, Type

class ContentType:
    def __str__(self) -> str: ...
    def get_all_objects_for_this_type(self, **kwargs) -> QuerySet: ...
    def get_object_for_this_type(self, **kwargs) -> Model: ...
    def model_class(self) -> Any: ...
    @property
    def name(self) -> str: ...
    def natural_key(self) -> Tuple[str, str]: ...

class ContentTypeManager:
    def __init__(self, *args, **kwargs) -> None: ...
    def _add_to_cache(self, using: str, ct: ContentType) -> None: ...
    def _get_from_cache(self, opts: Options) -> ContentType: ...
    def _get_opts(self, model: Any, for_concrete_model: bool) -> Options: ...
    def clear_cache(self) -> None: ...
    def get_by_natural_key(self, app_label: str, model: str) -> ContentType: ...
    def get_for_id(self, id: int) -> ContentType: ...
    def get_for_model(self, model: Any, for_concrete_model: bool = ...) -> ContentType: ...
    def get_for_models(
        self, *models, for_concrete_models=...
    ) -> Dict[Type[Model], ContentType]: ...
