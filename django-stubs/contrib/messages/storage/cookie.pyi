# Stubs for django.contrib.messages.storage.cookie (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

import json
from django.contrib.messages.storage.base import BaseStorage
from typing import Any

from django.contrib.messages.storage.base import Message
from django.http.response import HttpResponse
from typing import Any, List, Optional, Tuple, Union
class MessageEncoder(json.JSONEncoder):
    message_key: str = ...
    def default(self, obj: Message) -> List[Union[int, str]]: ...

class MessageDecoder(json.JSONDecoder):
    def process_messages(self, obj: Any) -> Any: ...
    def decode(self, s: str, **kwargs: Any) -> Union[List[Union[Message, str]], List[Message], List[str]]: ...

class CookieStorage(BaseStorage):
    cookie_name: str = ...
    max_cookie_size: int = ...
    not_finished: str = ...
    def _get(self, *args: Any, **kwargs: Any) -> Union[Tuple[None, bool], Tuple[List[Any], bool], Tuple[List[str], bool], Tuple[List[Message], bool]]: ...
    def _update_cookie(self, encoded_data: Optional[str], response: HttpResponse) -> None: ...
    def _store(self, messages: List[Message], response: HttpResponse, remove_oldest: bool = ..., *args: Any, **kwargs: Any) -> List[Message]: ...
    def _hash(self, value: str) -> str: ...
    def _encode(self, messages: Union[List[Message], List[str]], encode_empty: bool = ...) -> Optional[str]: ...
    used: bool = ...
    def _decode(self, data: Optional[str]) -> Any: ...
