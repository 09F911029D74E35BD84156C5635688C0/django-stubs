from django.http.request import HttpRequest
from django.http.response import HttpResponseBase
from typing import List, Optional, Union

class BaseStorage:
    def __init__(self, request: HttpRequest, *args, **kwargs) -> None: ...
    def __len__(self) -> int: ...
    def _get_level(self) -> int: ...
    @property
    def _loaded_messages(self) -> Union[List[Message], List[str]]: ...
    def _prepare_messages(self, messages: List[Message]) -> None: ...
    def _set_level(self, value: int = ...) -> None: ...
    def add(self, level: int, message: str, extra_tags: Optional[str] = ...) -> None: ...
    def update(self, response: HttpResponseBase) -> None: ...

class Message:
    def __eq__(self, other: Union[str, Message]) -> bool: ...
    def __init__(
        self, level: int, message: str, extra_tags: Optional[str] = ...
    ) -> None: ...
    def __str__(self) -> str: ...
    def _prepare(self) -> None: ...
    @property
    def level_tag(self) -> str: ...
    @property
    def tags(self) -> str: ...
