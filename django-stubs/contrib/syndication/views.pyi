# Stubs for django.contrib.syndication.views (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from django.core.exceptions import ObjectDoesNotExist
from typing import Any, Optional

from django.core.handlers.wsgi import WSGIRequest
from django.db.models.base import Model
from django.http.response import HttpResponse
from django.utils.feedgenerator import Atom1Feed, Enclosure, Rss201rev2Feed
from django.utils.safestring import SafeText
from typing import Any, Dict, List, Optional, Union

def add_domain(domain: str, url: str, secure: bool = ...) -> str: ...

class FeedDoesNotExist(ObjectDoesNotExist): ...

class Feed:
    feed_type: Any = ...
    title_template: Any = ...
    description_template: Any = ...
    def __call__(self, request: WSGIRequest, *args: Any, **kwargs: Any) -> HttpResponse: ...
    def item_title(self, item: Model) -> SafeText: ...
    def item_description(self, item: Model) -> str: ...
    def item_link(self, item: Model) -> str: ...
    def item_enclosures(self, item: Model) -> List[Enclosure]: ...
    def _get_dynamic_attr(
        self, attname: str, obj: Optional[Model], default: Optional[str] = ...
    ) -> Any: ...
    def feed_extra_kwargs(self, obj: None) -> Dict[Any, Any]: ...
    def item_extra_kwargs(self, item: Model) -> Dict[Any, Any]: ...
    def get_object(self, request: WSGIRequest, *args: Any, **kwargs: Any) -> None: ...
    def get_context_data(self, **kwargs: Any) -> Dict[str, Model]: ...
    def get_feed(
        self, obj: None, request: WSGIRequest
    ) -> Union[Atom1Feed, Rss201rev2Feed]: ...
