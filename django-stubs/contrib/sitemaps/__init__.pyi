# Stubs for django.contrib.sitemaps (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional

from datetime import datetime
from django.contrib.sites.models import Site
from django.contrib.sites.requests import RequestSite
from django.core.paginator import Paginator
from django.db.models.base import Model
from django.db.models.query import QuerySet
from typing import Any, Dict, List, Optional, Union
PING_URL: str

class SitemapNotFound(Exception): ...

def ping_google(sitemap_url: None = ..., ping_url: str = ...) -> None: ...
def _get_sitemap_full_url(sitemap_url: None): ...

class Sitemap:
    limit: int = ...
    protocol: Any = ...
    def __get(self, name: Any, obj: Any, default: Optional[Any] = ...): ...
    def items(self) -> List[Any]: ...
    def location(self, obj: Model) -> str: ...
    @property
    def paginator(self) -> Paginator: ...
    def get_urls(self, page: Union[str, int] = ..., site: Optional[Union[RequestSite, Site]] = ..., protocol: Optional[str] = ...) -> Union[List[Dict[str, object]], List[Dict[str, Union[Model, str, datetime, None]]]]: ...
    latest_lastmod: Any = ...
    def _urls(self, page: Union[str, int], protocol: str, domain: str) -> Union[List[Dict[str, object]], List[Dict[str, Union[Model, str, None]]]]: ...

class GenericSitemap(Sitemap):
    priority: Any = ...
    changefreq: Any = ...
    queryset: Any = ...
    date_field: Any = ...
    protocol: Any = ...
    def __init__(self, info_dict: Dict[str, Union[QuerySet, datetime]], priority: Optional[float] = ..., changefreq: Optional[str] = ..., protocol: Optional[str] = ...) -> None: ...
    def items(self): ...
    def lastmod(self, item: Model) -> None: ...

default_app_config: str
