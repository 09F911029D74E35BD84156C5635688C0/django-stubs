from typing import Optional


class AbstractBaseUser:
    def __str__(self) -> str: ...
    def check_password(self, raw_password: str) -> bool: ...
    def clean(self) -> None: ...
    @classmethod
    def get_email_field_name(cls) -> str: ...
    def get_session_auth_hash(self) -> str: ...
    def get_username(self) -> str: ...
    def has_usable_password(self) -> bool: ...
    @property
    def is_anonymous(self) -> bool: ...
    @property
    def is_authenticated(self) -> bool: ...
    @classmethod
    def normalize_username(cls, username: str) -> str: ...
    def save(self, *args, **kwargs) -> None: ...
    def set_password(self, raw_password: Optional[str]) -> None: ...
    def set_unusable_password(self) -> None: ...


class BaseUserManager:
    def get_by_natural_key(self, username: Optional[str]) -> AbstractBaseUser: ...
    @classmethod
    def normalize_email(cls, email: Optional[str]) -> str: ...