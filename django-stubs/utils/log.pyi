# Stubs for django.utils.log (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

import logging.config
from typing import Any, Optional

from django.core.mail.backends.locmem import EmailBackend
from logging import LogRecord
from typing import Callable, Dict, List, Union

request_logger: Any
DEFAULT_LOGGING: Any

def configure_logging(
    logging_config: str,
    logging_settings: Dict[
        str,
        Union[
            int,
            Dict[str, Dict[str, str]],
            Dict[str, Dict[str, Union[str, List[str]]]],
            Dict[str, Dict[str, Union[List[str], str, bool]]],
        ],
    ],
) -> None: ...

class AdminEmailHandler(logging.Handler):
    include_html: Any = ...
    email_backend: Any = ...
    def __init__(self, include_html: bool = ..., email_backend: None = ...) -> None: ...
    def emit(self, record: LogRecord) -> None: ...
    def send_mail(self, subject: str, message: str, *args: Any, **kwargs: Any) -> None: ...
    def connection(self) -> EmailBackend: ...
    def format_subject(self, subject: str) -> str: ...

class CallbackFilter(logging.Filter):
    callback: Any = ...
    def __init__(self, callback: Callable) -> None: ...
    def filter(self, record: str) -> int: ...

class RequireDebugFalse(logging.Filter):
    def filter(self, record: Union[str, LogRecord]) -> bool: ...

class RequireDebugTrue(logging.Filter):
    def filter(self, record: LogRecord) -> bool: ...

class ServerFormatter(logging.Formatter):
    style: Any = ...
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    def format(self, record: LogRecord) -> str: ...
    def uses_server_time(self) -> bool: ...

def log_response(
    message: str,
    *args: Any,
    response: Optional[Any] = ...,
    request: Optional[Any] = ...,
    logger: Any = ...,
    level: Optional[Any] = ...,
    exc_info: Optional[Any] = ...,
) -> None: ...
