# Stubs for django.utils.text (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from django.utils.functional import SimpleLazyObject
from typing import Any, Optional

from django.utils.safestring import SafeText
from typing import Iterator, List, Optional, Union
def capfirst(x: Optional[str]) -> Optional[str]: ...

re_words: Any
re_chars: Any
re_tag: Any
re_newlines: Any
re_camel_case: Any

def wrap(text: str, width: int) -> str: ...

class Truncator(SimpleLazyObject):
    def __init__(self, text: str) -> None: ...
    def add_truncation_text(self, text: str, truncate: Optional[str] = ...) -> str: ...
    def chars(self, num: int, truncate: Optional[str] = ..., html: bool = ...) -> str: ...
    def _text_chars(self, length: int, truncate: Optional[str], text: str, truncate_len: int) -> str: ...
    def words(self, num: int, truncate: Optional[str] = ..., html: bool = ...) -> str: ...
    def _text_words(self, length: int, truncate: Optional[str]) -> str: ...
    def _truncate_html(self, length: int, truncate: Optional[str], text: str, truncate_len: int, words: bool) -> str: ...

def get_valid_filename(s: str) -> str: ...
def get_text_list(list_: List[str], last_word: str = ...) -> str: ...
def normalize_newlines(text: str) -> str: ...
def phone2numeric(phone: str) -> str: ...
def compress_string(s: bytes) -> bytes: ...

class StreamingBuffer:
    vals: Any = ...
    def __init__(self) -> None: ...
    def write(self, val: bytes) -> None: ...
    def read(self) -> bytes: ...
    def flush(self): ...
    def close(self): ...

def compress_sequence(sequence: Union[map, List[bytes]]) -> Iterator[bytes]: ...

smart_split_re: Any

def smart_split(text: str) -> Iterator[str]: ...
def _replace_entity(match: Any): ...

_entity_re: Any

def unescape_entities(text: str) -> str: ...
def unescape_string_literal(s: str) -> str: ...
def slugify(value: str, allow_unicode: bool = ...) -> SafeText: ...
def camel_case_to_spaces(value: str) -> str: ...
def _format_lazy(format_string: str, *args: Any, **kwargs: Any) -> str: ...

format_lazy: Any
