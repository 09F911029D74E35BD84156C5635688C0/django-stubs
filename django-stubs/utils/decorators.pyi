# Stubs for django.utils.decorators (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional

from django.contrib.auth.mixins import PermissionRequiredMixin
from django.middleware.cache import CacheMiddleware
from django.middleware.csrf import CsrfViewMiddleware
from django.test.testcases import LiveServerTestCase
from django.views.generic.base import View
from typing import Callable, Optional, Tuple, Type, Union
class classonlymethod(classmethod):
    def __get__(self, instance: None, cls: Type[Union[View, PermissionRequiredMixin]] = ...) -> Callable: ...

def _update_method_wrapper(_wrapper: Callable, decorator: Callable) -> None: ...
def _multi_decorate(decorators: Union[Tuple[Callable, Callable], Callable], method: Callable) -> Callable: ...
def method_decorator(decorator: Callable, name: str = ...) -> Callable: ...
def decorator_from_middleware_with_args(middleware_class: Type[CacheMiddleware]) -> Callable: ...
def decorator_from_middleware(middleware_class: Type[CsrfViewMiddleware]) -> Callable: ...
def available_attrs(fn: Any): ...
def make_middleware_decorator(middleware_class: Type[object]) -> Callable: ...

class classproperty:
    fget: Any = ...
    def __init__(self, method: Callable = ...) -> None: ...
    def __get__(self, instance: Optional[LiveServerTestCase], cls: Type[LiveServerTestCase] = ...) -> str: ...
    def getter(self, method: Callable) -> classproperty: ...
