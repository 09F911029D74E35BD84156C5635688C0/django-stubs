# Stubs for django.utils.http (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional

from typing import Any, Dict, List, Optional, Set, Tuple, Union
from urllib.parse import ParseResult, SplitResult
ETAG_MATCH: Any
MONTHS: Any
__D: str
__D2: str
__M: str
__Y: str
__Y2: str
__T: str
RFC1123_DATE: Any
RFC850_DATE: Any
ASCTIME_DATE: Any
RFC3986_GENDELIMS: str
RFC3986_SUBDELIMS: str
FIELDS_MATCH: Any

def urlquote(url: str, safe: str = ...) -> str: ...
def urlquote_plus(url: str, safe: str = ...) -> str: ...
def urlunquote(quoted_url: Any): ...
def urlunquote_plus(quoted_url: str) -> str: ...
def urlencode(query: Any, doseq: bool = ...) -> str: ...
def cookie_date(epoch_seconds: float = ...) -> str: ...
def http_date(epoch_seconds: float = ...) -> str: ...
def parse_http_date(date: str) -> int: ...
def parse_http_date_safe(date: str) -> int: ...
def base36_to_int(s: str) -> int: ...
def int_to_base36(i: Union[str, Dict[int, int], int]) -> str: ...
def urlsafe_base64_encode(s: bytes) -> bytes: ...
def urlsafe_base64_decode(s: Union[str, bytes]) -> bytes: ...
def parse_etags(etag_str: str) -> List[str]: ...
def quote_etag(etag_str: str) -> str: ...
def is_same_domain(host: str, pattern: str) -> bool: ...
def is_safe_url(url: Optional[str], allowed_hosts: Optional[Set[str]], require_https: bool = ...) -> bool: ...
def _urlparse(url: str, scheme: str = ..., allow_fragments: bool = ...) -> ParseResult: ...
def _urlsplit(url: str, scheme: str = ..., allow_fragments: bool = ...) -> SplitResult: ...
def _is_safe_url(url: str, allowed_hosts: Set[str], require_https: bool = ...) -> bool: ...
def limited_parse_qsl(qs: str, keep_blank_values: bool = ..., encoding: str = ..., errors: str = ..., fields_limit: Optional[int] = ...) -> List[Tuple[str, str]]: ...
