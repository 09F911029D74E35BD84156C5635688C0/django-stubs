# Stubs for django.template.response (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from .loader import get_template, select_template
from django.http import HttpResponse
from typing import Any, Optional

from django.http.request import HttpRequest
from django.template.backends.django import Template
from django.utils.safestring import SafeText
from typing import Any, Callable, Dict, List, Optional, Union
class ContentNotRenderedError(Exception): ...

class SimpleTemplateResponse(HttpResponse):
    rendering_attrs: Any = ...
    template_name: Any = ...
    context_data: Any = ...
    using: Any = ...
    _post_render_callbacks: Any = ...
    _request: Any = ...
    _is_rendered: bool = ...
    def __init__(self, template: Union[str, List[str], Template], context: Any = ..., content_type: Optional[str] = ..., status: Optional[int] = ..., charset: Optional[str] = ..., using: None = ...) -> None: ...
    def __getstate__(self) -> Dict[str, Any]: ...
    def resolve_template(self, template: Union[str, List[str], Template]) -> Template: ...
    def resolve_context(self, context: Any) -> Any: ...
    @property
    def rendered_content(self) -> SafeText: ...
    def add_post_render_callback(self, callback: Callable) -> None: ...
    content: Any = ...
    def render(self) -> SimpleTemplateResponse: ...
    @property
    def is_rendered(self) -> bool: ...
    def __iter__(self): ...
    @property
    def content(self): ...
    @content.setter
    def content(self, value: Any) -> None: ...

class TemplateResponse(SimpleTemplateResponse):
    rendering_attrs: Any = ...
    _request: Any = ...
    def __init__(self, request: HttpRequest, template: Union[str, List[str], Template], context: Any = ..., content_type: Optional[str] = ..., status: Optional[int] = ..., charset: None = ..., using: None = ...) -> None: ...
