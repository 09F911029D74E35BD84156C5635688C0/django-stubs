# Stubs for django.template.backends.django (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from .base import BaseEngine
from typing import Any, Optional

from django.http.request import HttpRequest
from django.template.base import Template
from django.template.exceptions import TemplateDoesNotExist
from django.utils.safestring import SafeText
from typing import Any, Dict, Iterator, Optional
class DjangoTemplates(BaseEngine):
    app_dirname: str = ...
    engine: Any = ...
    def __init__(self, params: Dict[str, Any]) -> None: ...
    def from_string(self, template_code: str) -> Template: ...
    def get_template(self, template_name: str) -> Template: ...
    def get_templatetag_libraries(self, custom_libraries: Dict[str, str]) -> Dict[str, str]: ...

class Template:
    template: Any = ...
    backend: Any = ...
    def __init__(self, template: Template, backend: DjangoTemplates) -> None: ...
    @property
    def origin(self): ...
    def render(self, context: Any = ..., request: Optional[HttpRequest] = ...) -> SafeText: ...

def copy_exception(exc: TemplateDoesNotExist, backend: Optional[DjangoTemplates] = ...) -> TemplateDoesNotExist: ...
def reraise(exc: TemplateDoesNotExist, backend: DjangoTemplates) -> None: ...
def get_installed_libraries() -> Dict[str, str]: ...
def get_package_libraries(pkg: Any) -> Iterator[str]: ...
