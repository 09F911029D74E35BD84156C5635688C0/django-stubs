-   case: values_list_simple_field
    main: |
        from myapp.models import MyUser
        reveal_type(MyUser.objects.values_list('name').get())  # N: Revealed type is 'Tuple[builtins.str]'
        reveal_type(MyUser.objects.values_list('id', 'name').get())  # N: Revealed type is 'Tuple[builtins.int, builtins.str]'

        values_tuple = MyUser.objects.values_list('name', 'age').get()
        reveal_type(values_tuple[0])  # N: Revealed type is 'builtins.str'
        reveal_type(values_tuple[1])  # N: Revealed type is 'builtins.int'

        # no fields specified return all fields
        all_values_tuple = MyUser.objects.values_list().get()
        reveal_type(all_values_tuple)  # N: Revealed type is 'Tuple[builtins.int, builtins.str, builtins.int]'
    installed_apps:
        - myapp
    files:
        -   path: myapp/__init__.py
        -   path: myapp/models.py
            content: |
                from django.db import models
                class MyUser(models.Model):
                    name = models.CharField(max_length=100)
                    age = models.IntegerField()

-   case: values_list_related_model_fields
    main: |
        from myapp.models import Post
        values_tuple = Post.objects.values_list('blog', 'blog__num_posts', 'blog__publisher', 'blog__publisher__name').get()
        reveal_type(values_tuple[0])  # N: Revealed type is 'myapp.models.Blog'
        reveal_type(values_tuple[1])  # N: Revealed type is 'builtins.int'
        reveal_type(values_tuple[2])  # N: Revealed type is 'myapp.models.Publisher'
        reveal_type(values_tuple[3])  # N: Revealed type is 'builtins.str'
    installed_apps:
        - myapp
    files:
        -   path: myapp/__init__.py
        -   path: myapp/models.py
            content: |
                from django.db import models
                class Publisher(models.Model):
                    name = models.CharField(max_length=100)
                class Blog(models.Model):
                    num_posts = models.IntegerField()
                    publisher = models.ForeignKey(to=Publisher, on_delete=models.CASCADE)
                class Post(models.Model):
                    blog = models.ForeignKey(to=Blog, on_delete=models.CASCADE)

-   case: values_list_flat_true
    main: |
        from myapp.models import MyUser, MyUser2
        reveal_type(MyUser.objects.values_list('name', flat=True).get())  # N: Revealed type is 'builtins.str*'
        reveal_type(MyUser.objects.values_list('name', 'age', flat=True).get())

        # flat=True without specified fields returns primary key values
        reveal_type(MyUser.objects.values_list(flat=True)[0])  # N: Revealed type is 'builtins.int*'
        reveal_type(MyUser2.objects.values_list(flat=True)[0])  # N: Revealed type is 'builtins.str*'
    out: |
        main:3: error: 'flat' is not valid when 'values_list' is called with more than one field
        main:3: note: Revealed type is 'Any'
    installed_apps:
        - myapp
    files:
        -   path: myapp/__init__.py
        -   path: myapp/models.py
            content: |
                from django.db import models
                class MyUser(models.Model):
                    name = models.CharField(max_length=100)
                    age = models.IntegerField()
                class MyUser2(models.Model):
                    name = models.CharField(max_length=100, primary_key=True)

-   case: values_list_named_true
    main: |
        from myapp.models import MyUser
        values_named_tuple = MyUser.objects.values_list('name', 'age', named=True).get()
        reveal_type(values_named_tuple)  # N: Revealed type is 'Tuple[builtins.str, builtins.int, fallback=main.Row]'
        reveal_type(values_named_tuple.name)  # N: Revealed type is 'builtins.str'
        reveal_type(values_named_tuple.age)  # N: Revealed type is 'builtins.int'

        # no fields specified, returns all fields namedtuple
        all_values_named_tuple = MyUser.objects.values_list(named=True).get()
        reveal_type(all_values_named_tuple.id)  # N: Revealed type is 'builtins.int'
        reveal_type(all_values_named_tuple.name)  # N: Revealed type is 'builtins.str'
        reveal_type(all_values_named_tuple.age)  # N: Revealed type is 'builtins.int'
        reveal_type(all_values_named_tuple.is_admin)  # N: Revealed type is 'builtins.bool'
    installed_apps:
        - myapp
    files:
        -   path: myapp/__init__.py
        -   path: myapp/models.py
            content: |
                from django.db import models
                class MyUser(models.Model):
                    name = models.CharField(max_length=100)
                    age = models.IntegerField()
                    is_admin = models.BooleanField()

-   case: values_list_flat_true_named_true_error
    main: |
        from myapp.models import MyUser
        reveal_type(MyUser.objects.values_list('name', flat=True, named=True).get())
    out: |
        main:2: error: 'flat' and 'named' can't be used together
        main:2: note: Revealed type is 'Any'
    installed_apps:
        - myapp
    files:
        -   path: myapp/__init__.py
        -   path: myapp/models.py
            content: |
                from django.db import models
                class MyUser(models.Model):
                    name = models.CharField(max_length=100)

-   case: invalid_lookups
    main: |
        from myapp.models import Blog
        reveal_type(Blog.objects.values_list('unknown').get())
        reveal_type(Blog.objects.values_list('unknown', flat=True).get())
        reveal_type(Blog.objects.values_list('unknown', named=True).get())
        reveal_type(Blog.objects.values_list('publisher__unknown').get())
    out: |
        main:2: error: Cannot resolve keyword 'unknown' into field. Choices are: id, publisher, publisher_id
        main:2: note: Revealed type is 'Any'
        main:3: error: Cannot resolve keyword 'unknown' into field. Choices are: id, publisher, publisher_id
        main:3: note: Revealed type is 'Any'
        main:4: error: Cannot resolve keyword 'unknown' into field. Choices are: id, publisher, publisher_id
        main:4: note: Revealed type is 'Any'
        main:5: error: Lookups not supported yet
        main:5: note: Revealed type is 'Any'
    installed_apps:
        - myapp
    files:
        -   path: myapp/__init__.py
        -   path: myapp/models.py
            content: |
                from django.db import models
                class Publisher(models.Model):
                    pass
                class Blog(models.Model):
                    publisher = models.ForeignKey(to=Publisher, on_delete=models.CASCADE)